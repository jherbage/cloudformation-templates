---
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  TemplateS3Bucket:
    Description: s3 Bucket with the stack templates at top level
    Type: String
    Default: 'https://s3.eu-west-2.amazonaws.com/jherbagecftemplates'
  AMIImage:
    Description: AMI to use for hosts
    Type: AWS::EC2::Image::Id
    Default: ami-061a2d878e5754b62
  EC2KeyPair:
    Description: EC2 Keypair
    Type: AWS::EC2::KeyPair::KeyName
    Default: aws-eu-keys
  SubnetAZ1:
    Description: Availability Zone for Subnet 1
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-west-2a
  SubnetAZ2:
    Description: Availability Zone for Subnet 2
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-west-2b
  SubnetAZ3:
    Description: Availability Zone for Subnet 3
    Type: AWS::EC2::AvailabilityZone::Name	
    Default: eu-west-2c
  VPCCIDR:
    Description: CIDR for VPC
    Type: String
    Default: 172.31.0.0/16
  SubnetCIDR1:
    Description: CIDR Subnet 1
    Type: String
    Default: 172.31.0.0/26
  SubnetCIDR2:
    Description: CIDR Subnet 2
    Type: String
    Default: 172.31.16.0/26
  SubnetCIDR3:
    Description: CIDR Subnet 3
    Type: String
    Default: 172.31.32.0/26
  ELBSubnetCIDR1:
    Description: CIDR Subnet 1
    Type: String
    Default: 172.31.0.100/28
  ELBSubnetCIDR2:
    Description: CIDR Subnet 2
    Type: String
    Default: 172.31.16.100/28
  ELBSubnetCIDR3:
    Description: CIDR Subnet 3
    Type: String
    Default: 172.31.32.100/28
  MaxNumberOfWorkers:
    Description: Max Number of Workers
    Type: String
    Default: '5'
  MinNumberOfWorkers:
    Description: Min Number of Workers
    Type: String
    Default: '2'
  KubernetesServicePortRange:
    Description: Port range for service addresses
    Type: String
    Default: '30000-32767'
Resources:
  Roles:
    Type: AWS::CloudFormation::Stack
    Properties:
      TimeoutInMinutes: '60'
      TemplateURL: !Join ['', [!Ref TemplateS3Bucket, '/iam-root-role.yml']]
  LB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TimeoutInMinutes: '60'
      TemplateURL: !Join ['', [!Ref TemplateS3Bucket, '/load-balancer.yml']]
      Parameters:
        SecurityGroup: !GetAtt Network.Outputs.SecurityGroupOut	        
        Subnet1: !GetAtt ELBSubnets.Outputs.SubnetAOut	
        Subnet2: !GetAtt ELBSubnets.Outputs.SubnetBOut	
        Subnet3: !GetAtt ELBSubnets.Outputs.SubnetCOut	
        InstancePort: '6443'
        LBPort: '6443'
        InstanceProtocol: 'TCP'
        LBProtocol: 'TCP'
  Buckets:
    Type: AWS::CloudFormation::Stack
    Properties:
      TimeoutInMinutes: '60'
      TemplateURL: !Join ['', [!Ref TemplateS3Bucket, '/common-s3-bucket.yml']]
  Network:
    Type: AWS::CloudFormation::Stack
    Properties:
      TimeoutInMinutes: '60'
      TemplateURL: !Join ['', [!Ref TemplateS3Bucket, '/basic-3zone-VPC.yml']]
      Parameters:
        SubnetAZ1: !Ref SubnetAZ1
        SubnetAZ2: !Ref SubnetAZ2
        SubnetAZ3: !Ref SubnetAZ3
        SubnetCIDR1: !Ref SubnetCIDR1
        SubnetCIDR2: !Ref SubnetCIDR2
        SubnetCIDR3: !Ref SubnetCIDR3
        VPCCIDR: !Ref VPCCIDR
  ELBSubnets:
    Type: AWS::CloudFormation::Stack
    Properties:
      TimeoutInMinutes: '60'
      TemplateURL: !Join ['', [!Ref TemplateS3Bucket, '/3-subnetsIn3AZs.yml']]
      Parameters:
        VPC: !GetAtt Network.Outputs.VPCOut	
        VPCRouteTable: !GetAtt Network.Outputs.VPCRouteTableOut
        SubnetAZ1: !Ref SubnetAZ1
        SubnetAZ2: !Ref SubnetAZ2
        SubnetAZ3: !Ref SubnetAZ3
        SubnetCIDR1: !Ref ELBSubnetCIDR1
        SubnetCIDR2: !Ref ELBSubnetCIDR2
        SubnetCIDR3: !Ref ELBSubnetCIDR3
  BastionHost:
    Type: AWS::CloudFormation::Stack
    Properties:
      TimeoutInMinutes: '60'
      TemplateURL: !Join ['', [!Ref TemplateS3Bucket, '/bastion-ubuntu.yml']]
      Parameters: 
        BastionAMIImage: !Ref AMIImage
        EC2KeyPair: !Ref EC2KeyPair
        BastionSubnet: !GetAtt Network.Outputs.SubnetAOut
        SecurityGroup: !GetAtt Network.Outputs.SecurityGroupOut	
        InstanceProfile: !GetAtt Roles.Outputs.RootInstanceProfileOut
        CertsS3Bucket: !GetAtt Buckets.Outputs.s3BucketOut
        LbDNSAddr: !GetAtt LB.Outputs.LbDNSOut
        ELBPrivateIPRange: 172.31.16.96,172.31.16.97,172.31.16.98,172.31.16.99,172.31.16.100,172.31.16.101,172.31.16.102,172.31.16.103,172.31.16.104,172.31.16.105,172.31.16.106,172.31.16.107,172.31.16.108,172.31.16.109,172.31.16.110,172.31.16.111,172.31.32.96,172.31.32.97,172.31.32.98,172.31.32.99,172.31.32.100,172.31.32.101,172.31.32.102,172.31.32.103,172.31.32.104,172.31.32.105,172.31.32.106,172.31.32.107,172.31.32.108,172.31.32.109,172.31.32.110,172.31.32.111,172.31.0.96,172.31.0.97,172.31.0.98,172.31.0.99,172.31.0.100,172.31.0.101,172.31.0.102,172.31.0.103,172.31.0.104,172.31.0.105,172.31.0.106,172.31.0.107,172.31.0.108,172.31.0.109,172.31.0.110,172.31.0.111
        Controller1Addr: 
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR1]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR1]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR1]]
              - '4'
        Controller2Addr: 
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR2]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR2]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR2]]
              - '4'
        Controller3Addr:
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR3]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR3]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR3]]
              - '4'
  ControllerHost1:
    Type: AWS::CloudFormation::Stack
    DependsOn: BastionHost
    Properties:
      TimeoutInMinutes: '60'
      TemplateURL: !Join ['', [!Ref TemplateS3Bucket, '/controller-ubuntu.yml']]
      Parameters: 
        AMIImage: !Ref AMIImage
        EC2KeyPair: !Ref EC2KeyPair
        Subnet: !GetAtt Network.Outputs.SubnetAOut
        SecurityGroup: !GetAtt Network.Outputs.SecurityGroupOut	
        InstanceProfile: !GetAtt Roles.Outputs.RootInstanceProfileOut
        CertsS3Bucket: !GetAtt Buckets.Outputs.s3BucketOut
        ETCDNAME1: etcd1
        ETCDNAME2: etcd2
        ETCDNAME3: etcd3
        ELBName: !GetAtt LB.Outputs.LoadBalancerOut
        LbDNSAddr: !GetAtt LB.Outputs.LbDNSOut
        servicePortRange: !Ref KubernetesServicePortRange
        IpAddress1: 
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR1]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR1]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR1]]
              - '4'
        IpAddress2: 
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR2]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR2]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR2]]
              - '4'
        IpAddress3:
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR3]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR3]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR3]]
              - '4'
  ControllerHost2:
    Type: AWS::CloudFormation::Stack
    DependsOn: BastionHost
    Properties:
      TimeoutInMinutes: '60'
      TemplateURL: !Join ['', [!Ref TemplateS3Bucket, '/controller-ubuntu.yml']]
      Parameters: 
        AMIImage: !Ref AMIImage
        EC2KeyPair: !Ref EC2KeyPair
        Subnet: !GetAtt Network.Outputs.SubnetBOut
        SecurityGroup: !GetAtt Network.Outputs.SecurityGroupOut	
        InstanceProfile: !GetAtt Roles.Outputs.RootInstanceProfileOut
        CertsS3Bucket: !GetAtt Buckets.Outputs.s3BucketOut
        ETCDNAME1: etcd2
        ETCDNAME2: etcd1
        ETCDNAME3: etcd3
        ELBName: !GetAtt LB.Outputs.LoadBalancerOut
        LbDNSAddr: !GetAtt LB.Outputs.LbDNSOut
        servicePortRange: !Ref KubernetesServicePortRange
        IpAddress1: 
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR2]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR2]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR2]]
              - '4'
        IpAddress2: 
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR1]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR1]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR1]]
              - '4'
        IpAddress3:
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR3]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR3]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR3]]
              - '4'
  ControllerHost3:
    Type: AWS::CloudFormation::Stack
    DependsOn: BastionHost
    Properties:
      TimeoutInMinutes: '60'
      TemplateURL: !Join ['', [!Ref TemplateS3Bucket, '/controller-ubuntu.yml']]
      Parameters: 
        AMIImage: !Ref AMIImage
        EC2KeyPair: !Ref EC2KeyPair
        Subnet: !GetAtt Network.Outputs.SubnetCOut
        SecurityGroup: !GetAtt Network.Outputs.SecurityGroupOut	
        InstanceProfile: !GetAtt Roles.Outputs.RootInstanceProfileOut
        CertsS3Bucket: !GetAtt Buckets.Outputs.s3BucketOut
        ETCDNAME1: 'etcd3'
        ETCDNAME2: 'etcd1'
        ETCDNAME3: 'etcd2'
        ELBName: !GetAtt LB.Outputs.LoadBalancerOut
        LbDNSAddr: !GetAtt LB.Outputs.LbDNSOut
        servicePortRange: !Ref KubernetesServicePortRange
        IpAddress1: 
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR3]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR3]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR3]]
              - '4'
        IpAddress2: 
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR1]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR1]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR1]]
              - '4'
        IpAddress3:
          !Join
            - '.'
            - - !Select [0, !Split [ ".", !Ref SubnetCIDR2]]
              - !Select [1, !Split [ ".", !Ref SubnetCIDR2]]
              - !Select [2, !Split [ ".", !Ref SubnetCIDR2]]
              - '4'
  WorkerScalingGroup:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - ControllerHost3
      - ControllerHost2
      - ControllerHost1
    Properties:
      TimeoutInMinutes: '60'
      TemplateURL: !Join ['', [!Ref TemplateS3Bucket, '/ubuntu-worker-scaling-group.yml']]
      Parameters: 
        AMIImage: !Ref AMIImage
        EC2KeyPair: !Ref EC2KeyPair
        Subnet1: !GetAtt Network.Outputs.SubnetAOut
        Subnet2: !GetAtt Network.Outputs.SubnetBOut
        Subnet3: !GetAtt Network.Outputs.SubnetCOut
        AZ1: !Ref SubnetAZ1
        AZ2: !Ref SubnetAZ2
        AZ3: !Ref SubnetAZ3
        SecurityGroup: !GetAtt Network.Outputs.SecurityGroupOut	
        InstanceProfile: !GetAtt Roles.Outputs.RootInstanceProfileOut
        InstanceRole: !GetAtt Roles.Outputs.RootRoleOut
        CertsS3Bucket: !GetAtt Buckets.Outputs.s3BucketOut
        LbName: !GetAtt LB.Outputs.LoadBalancerOut
        LbDNSAddr: !GetAtt LB.Outputs.LbDNSOut
        MaxNumberOfWorkers: !Ref MaxNumberOfWorkers
        MinNumberOfWorkers: !Ref MinNumberOfWorkers
